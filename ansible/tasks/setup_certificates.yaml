# Installs acme.sh and downloads certificates
---
- name: "Install crontab to create a cronjob for renewal"
  ansible.builtin.apt:
    name: "cron"
    state: "present"
    update_cache: false

- name: "Copy acme.sh script"
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/files/acme.sh"
    dest: "{{ user_dir }}/acme.sh"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0500"

- name: "Request to generate certificates"
  ansible.builtin.shell: >
    ./acme.sh --issue --standalone
    --email {{ email }}
    -d {{ domain }}
    --cert-file /etc/ssl/certs/{{ domain }}/servercert.pem
    --key-file /etc/ssl/certs/{{ domain }}/server.key
    --ca-file /etc/ssl/certs/{{ domain }}/serverca.crt
    --fullchain-file /etc/ssl/certs/{{ domain }}/serverfullchain.crt
    --force
  register: generate_certificates_result
  ignore_errors: true
  changed_when: false
  become: true

- name: "Fail if request failed with non 'Domains not changed' error"
  ansible.builtin.fail:
    msg: "Certificates failed with error above"
  when: "generate_certificates_result.rc != 0 and 'Domains not changed' not in generate_certificates_result.stdout"
  become: true

- name: "Make all certificates readable. TODO fix changed_when"
  ansible.builtin.shell: "chmod 644 /etc/ssl/certs/{{ domain }}/*"
  register: register_cert_access_changed
  changed_when: "register_cert_access_changed.rc != 0"
  when: "generate_certificates_result.rc == 0"
  become: true
