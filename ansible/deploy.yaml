---
- name: Deployment
  hosts: main

  tasks:
    - name: "Upgrade system"
      ansible.builtin.import_tasks: ./tasks/setup_upgrade_system.yaml
      become: true
      tags:
        - deploy_initial

    - name: "Dev Sec - Security OS Hardening"
      ansible.builtin.include_role:
        name: devsec.hardening.os_hardening
      vars:
        ansible_become: true
        sysctl_overwrite:
          # Enable IPv4 traffic forwarding. For Docker
          net.ipv4.ip_forward: 1
      tags:
        - deploy_initial

    - name: "Setup unattended-upgrades"
      ansible.builtin.include_role:
        name: hifis.toolkit.unattended_upgrades
      vars:
        ansible_become: true
      tags:
        - deploy_initial

    - name: "Setup firewall"
      ansible.builtin.import_tasks: ./tasks/setup_firewall.yaml
      become: true
      tags:
        - deploy_initial

    - name: "Setup docker an docker-compose"
      ansible.builtin.import_tasks: ./tasks/setup_docker.yaml
      become: true
      tags:
        - deploy_initial

    - name: "Setup certificates"
      ansible.builtin.import_tasks: ./tasks/setup_certificates.yaml
      become: true
      tags:
        - deploy_initial

    # vvv---- TODO

    # - name: "Load variables"
    #   ansible.builtin.include_vars: "variables.yaml"

    # - name: "Fail if no 'email' is provided"
    #   ansible.builtin.fail: msg="Please provide 'email' parameter"
    #   when: email is undefined

    # - name: "fail if no 'domain' is provided"
    #   ansible.builtin.fail: msg="please provide 'domain' parameter"
    #   when: domain is undefined

    # - name: "Set normal user home dir"
    #   ansible.builtin.set_fact:
    #     user_dir: "{{ansible_facts.user_dir}}"
    #     user: "{{ansible_facts.user_id}}"

    # - name: "Update apt"
    #   ansible.builtin.apt:
    #     update_cache: yes
    #   become: true

    # - name: "Copy envoy script"
    #   ansible.builtin.copy:
    #     src: "{{ playbook_dir }}/files/envoy.yaml"
    #     dest: "{{ user_dir }}/envoy.yaml"
    #     owner: "{{ user }}"
    #     group: "{{ user }}"
    #     mode: "0444"

    # - name: "Log into private registry and force re-authorization"
    #   docker_login:
    #     registry: ghcr.io
    #     username: "{{ docker_user }}"
    #     password: "{{ docker_password }}"
    #     reauthorize: yes
    #   no_log: true
    #   become: true

    # - name: "Copy docker compose file"
    #   ansible.builtin.template:
    #     src: "{{ playbook_dir }}/files/compose.yaml.j2"
    #     dest: "{{ user_dir }}/compose.yaml"
    #     owner: "{{ user }}"
    #     group: "{{ user }}"
    #     mode: "0444"

    # - name: "Start docker compose"
    #   community.docker.docker_compose_v2:
    #     project_name: heritage_archive
    #     project_src: "{{ user_dir }}"
    #     files: "compose.yaml"
    #     state: present
    #   become: true
